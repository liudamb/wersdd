<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"               xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/mvc
		http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context-3.2.xsd
		http://www.springframework.org/schema/aop
		http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
		http://www.springframework.org/schema/tx
		http://www.springframework.org/schema/tx/spring-tx-3.2.xsd ">


    <!--扫描controller包中类的注解-->
    <context:component-scan base-package="controller"/>

    <!--开启注解扫描驱动-->
    <mvc:annotation-driven />

    <!--视图解析器,以下配置后,Controller最终返回该页面的前缀-->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver"
          id="internalResourceViewResolver">
        <!-- 前缀 -->
        <property name="prefix" value="/WEB-INF/jsp/" />
        <!-- 后缀 -->
        <property name="suffix" value=".jsp" />
    </bean>

    <bean id="AsXML" class="aspect.OrderInfoAspect"></bean>
    <!--上传图片配置-->
    <bean id="multipartResolver"
          class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <property name="defaultEncoding" value="UTF-8" />
        <!-- 指定所上传文件的总大小,单位字节。注意maxUploadSize属性的限制不是针对单个文件，而是所有文件的容量之和 -->
        <property name="maxUploadSize" value="10240000" />
        <property name="resolveLazily" value="true"/>

    </bean>


    <aop:config>
        <aop:pointcut expression="execution(* controller.PayController.pay(..))" id="cut"/>

        <!--pointcut-ref引入切点表达式-->
        <aop:aspect ref="AsXML" order="1">
            <!--返回通知里的returning="res" 就是afterReturning方法里的参数,用来获取Controller里方法的返回值-->
            <aop:before method="before" pointcut-ref="cut"/>
            <aop:after method="after" pointcut-ref="cut"/>
            <aop:after-returning method="afterReturning" pointcut-ref="cut" returning="res"/>
            <aop:after-throwing method="afterThrowing" pointcut-ref="cut" throwing="ex"/>
            <aop:around method="aroundMethod" pointcut-ref="cut"/>
        </aop:aspect>

    </aop:config>




    <!--引用WEB-INF下的静态资源(js,css,img,jpg等)-->
    <!--<mvc:resources location="/resource/js/" mapping="/js/**"/>-->
    <!--<mvc:resources location="/resource/css/" mapping="/css/**"/>-->
    <!--<mvc:resources location="/resource/images/" mapping="/images/**"/>-->
    <!-- 排除拦截的地址 -->
    <!--  <mvc:exclude-mapping path="/*/login"/> 不拦截login结尾的请求 -->
    <mvc:interceptors>
        <mvc:interceptor>
            <!--/*表示拦截所有请求,如果想拦截以某个名字(abc)结尾的请求path里写/*/abc,如果想拦截以某个名字(abc)开头的请求,path里写/abc/* -->
            <!--<mvc:mapping path="/*" />-->
            <mvc:mapping path="/getp_type" />

            <!-- 排除拦截的地址 -->
            <!-- <mvc:exclude-mapping path="/*/login"/>--> <!--不拦截login结尾的请求 -->
            <bean id="commonInterceptor" class="interceptor.MyInterceptor "></bean> <!--这个类就是我们自定义的Interceptor -->
        </mvc:interceptor>
        <!-- 当设置多个拦截器时，先按顺序调用preHandle方法，然后逆序调用每个拦截器的postHandle和afterCompletion方法  -->

    </mvc:interceptors>
</beans>
